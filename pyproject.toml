[tool.poetry]
name = "dbt-af"
version = "0.5.1"
description = "Distibuted dbt runs on Apache Airflow"
authors = [
    "Nikita Yurasov <nikitayurasov@toloka.ai>",
    "Igor Safonov <igsaf@toloka.ai>",
    "Evgeny Ermakov <jkermakov@toloka.ai>",
    "Leonid Kozhinov <lkozhinov@toloka.ai>",
]
readme = "README.md"
license = "Apache-2.0"
homepage = "https://github.com/Toloka/dbt-af"
repository = "https://github.com/Toloka/dbt-af"
documentation = "https://github.com/Toloka/dbt-af/blob/main/examples/README.md"
keywords = ["python", "airflow", "dbt"]
packages = [
    { include = "dbt_af" },
    { include = "dbt_af_functional_tests" },
    { include = "scripts" },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
attrs = "^23.1"
apache-airflow = ">=2.6"
pydantic = ">=1.10,<3.0.0"
apache-airflow-providers-cncf-kubernetes = ">=7.0.0"
cachetools = "~5.3"
typer = "~0.9"
dbt-core = "^1.7"

pytest = { version = "*", optional = true }
pytest-env = { version = "*", optional = true }
pytest-socket = { version = "*", optional = true }
pytest-mock = { version = "*", optional = true }

airflow-mcd = { version = "^0.2", optional = true }
pycarlo = { version = "^0.8", optional = true }

tableauserverclient = { version = "^0.25", optional = true }

dbt-postgres = { version = "^1.7", optional = true }

[tool.poetry.group.dev.dependencies]
ruff = "^0.3"
pytest = "^8"
pytest-env = "*"
pytest-cov = "~4.1"
pytest-socket = "*"
pytest-mock = "*"
dbt-postgres = "^1.7"
psycopg2-binary = { version = "^2.9", markers = "sys_platform == 'linux'" }  # due to bug https://github.com/dbt-labs/dbt-postgres/issues/96
dbt-databricks = "^1.7"
pre-commit = "3.6.2"
ipython = "^8"

[tool.poetry.extras]
mcd = ["airflow-mcd", "pycarlo"]
tests = ["pytest", "pytest-env", "pytest-socket", "pytest-mock"]
minidbt = []
examples = ["dbt-postgres", "psycopg2-binary"]
tableau = ["tableauserverclient"]
all = [
    "airflow-mcd", "pycarlo", # mcd
    "pytest", "pytest-env", "pytest-socket", "pytest-mock", # tests
    "dbt-postgres", "psycopg2-binary", # examples
    "tableauserverclient", # tableau
]

[tool.poetry.scripts]
dbt-af-manifest-tests = { callable = "dbt_af_functional_tests:cli", extras = ["tests"] }
mini_dbt_project_generator = { callable = "scripts.mini_dbt_project_generator:cli", extras = ["minidbt"] }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# https://beta.ruff.rs/docs
line-length = 120
lint.select = [
    # https://beta.ruff.rs/docs/rules
    "F", # pyflakes
    "E", # pycodestyle (errors)
    "W", # pycodestyle (warnings) eg. trailing/leading whitespaces
    "Q", # quotes
    "I001", # unsorted imports (isort)
    "TID", # tidy-imports
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
# https://beta.ruff.rs/docs/settings/#isort

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true
