name: Release
run-name: PyPI release (triggered by @${{ github.actor }})

on:
  release:
    types: [ published ]

jobs:
  verify-tests-workflow:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get commit SHA from tag
        id: sha
        run: |
          git fetch --tags --force
          TAG="${{ github.event.release.tag_name }}"
          SHA="$(git rev-parse "${TAG}^{commit}")"
          echo "sha=$SHA" >> "$GITHUB_OUTPUT"

      - name: Verify other workflow success
        uses: actions/github-script@v7
        with:
          script: |
            const testsWorkflowFile = "integrational_tests.yml";
            const maxWaitTime = 30 * 60 * 1000; // 30 minutes in milliseconds
            const checkInterval = 30 * 1000; // Check every 30 seconds
            const startTime = Date.now();

            async function getLatestWorkflowRun() {
              const { data } = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: testsWorkflowFile,
                branch: "main",
                per_page: 1,
              });
              return data.workflow_runs[0];
            }

            let run = await getLatestWorkflowRun();

            if (!run) {
              core.setFailed(`Could not find any workflow runs for ${testsWorkflowFile}`);
              return;
            }

            // Wait for the workflow to complete if it's still running
            while (run.status !== "completed") {
              const elapsed = Date.now() - startTime;
              if (elapsed > maxWaitTime) {
                core.setFailed(`Timeout: Latest workflow ${testsWorkflowFile} is still running after 30 minutes`);
                return;
              }

              core.info(`Latest workflow is still ${run.status}. Waiting... (${Math.floor(elapsed / 1000)}s elapsed)`);
              await new Promise(resolve => setTimeout(resolve, checkInterval));
              run = await getLatestWorkflowRun();
            }

            // Check the conclusion of the completed workflow
            if (run.conclusion !== "success") {
              core.setFailed(`Latest workflow ${testsWorkflowFile} finished with status: ${run.conclusion}`);
            } else {
              core.info(`Latest workflow ${testsWorkflowFile} finished with status: ${run.conclusion} âœ…`);
            }

  build:
    needs: verify-tests-workflow
    name: Build wheels and source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.19"
      - name: Install project
        run: |
          uv sync --all-packages --all-groups --all-extras

      - name: Build package
        run: |
          uv build

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: dist/*
          if-no-files-found: error

  publish:
    name: Publish release
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/dbt-af
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: dist

      - name: Push build artifacts to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
